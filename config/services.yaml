# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Resolver\ArgumentValueResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    api.exception_listener:
        class: App\EventSubscriber\*

    chillerlan\QRCode\QRCode:
        class: chillerlan\QRCode\QRCode

    Lcobucci\JWT\Signer\Rsa\Sha256: ~

    App\Security\Key\KeyProvider:
        public: true
        arguments:
            $passPhrase: '%env(JWT_PASSPHRASE)%'
            $pathPublicKey: 'file://%kernel.project_dir%/config/jwt/public.pem'
            $pathPrivateKey:  'file://%kernel.project_dir%/config/jwt/private.pem'

    App\Builder\TokenBuilder:
        arguments:
            $singer: '@Lcobucci\JWT\Signer\Rsa\Sha256'
            $expirationTimeAccess: '%env(EXPIRATION_TIME_ACCESS_TOKEN)%'
